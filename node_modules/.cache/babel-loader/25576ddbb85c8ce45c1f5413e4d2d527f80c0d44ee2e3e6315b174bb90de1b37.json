{"ast":null,"code":"import VerticalAlignTopOutlined from \"@ant-design/icons/es/icons/VerticalAlignTopOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport { cloneElement } from '../_util/reactNode';\nimport scrollTo from '../_util/scrollTo';\nimport throttleByAnimationFrame from '../_util/throttleByAnimationFrame';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst BackTop = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className = '',\n    visibilityHeight = 400,\n    target,\n    onClick,\n    duration = 450\n  } = props;\n  const [visible, setVisible] = React.useState(visibilityHeight === 0);\n  const ref = React.useRef(null);\n  const getDefaultTarget = () => ref.current && ref.current.ownerDocument ? ref.current.ownerDocument : window;\n  const handleScroll = throttleByAnimationFrame(e => {\n    const scrollTop = getScroll(e.target, true);\n    setVisible(scrollTop >= visibilityHeight);\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'BackTop', '`BackTop` is deprecated, please use `FloatButton.BackTop` instead.') : void 0;\n  }\n  React.useEffect(() => {\n    const getTarget = target || getDefaultTarget;\n    const container = getTarget();\n    handleScroll({\n      target: container\n    });\n    container === null || container === void 0 ? void 0 : container.addEventListener('scroll', handleScroll);\n    return () => {\n      handleScroll.cancel();\n      container === null || container === void 0 ? void 0 : container.removeEventListener('scroll', handleScroll);\n    };\n  }, [target]);\n  const scrollToTop = e => {\n    scrollTo(0, {\n      getContainer: target || getDefaultTarget,\n      duration\n    });\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('back-top', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const classString = classNames(hashId, prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className);\n  // fix https://fb.me/react-unknown-prop\n  const divProps = omit(props, ['prefixCls', 'className', 'children', 'visibilityHeight', 'target']);\n  const defaultElement = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-content`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-icon`\n  }, /*#__PURE__*/React.createElement(VerticalAlignTopOutlined, null)));\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, divProps, {\n    className: classString,\n    onClick: scrollToTop,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    motionName: `${rootPrefixCls}-fade`\n  }, _ref => {\n    let {\n      className: motionClassName\n    } = _ref;\n    return cloneElement(props.children || defaultElement, _ref2 => {\n      let {\n        className: cloneCls\n      } = _ref2;\n      return {\n        className: classNames(motionClassName, cloneCls)\n      };\n    });\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  BackTop.displayName = 'BackTop';\n}\nexport default /*#__PURE__*/React.memo(BackTop);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}