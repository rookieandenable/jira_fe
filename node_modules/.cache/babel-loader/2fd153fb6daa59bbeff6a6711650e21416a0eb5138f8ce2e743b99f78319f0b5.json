{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genLayoutLightStyle from './light';\nconst genLayoutStyle = token => {\n  const {\n    antCls,\n    // .ant\n    componentCls,\n    // .ant-layout\n    colorText,\n    colorTextLightSolid,\n    colorBgHeader,\n    colorBgBody,\n    colorBgTrigger,\n    layoutHeaderHeight,\n    layoutHeaderPaddingInline,\n    layoutHeaderColor,\n    layoutFooterPadding,\n    layoutTriggerHeight,\n    layoutZeroTriggerSize,\n    motionDurationMid,\n    motionDurationSlow,\n    fontSize,\n    borderRadius\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({\n      display: 'flex',\n      flex: 'auto',\n      flexDirection: 'column',\n      /* fix firefox can't set height smaller than content on flex item */\n      minHeight: 0,\n      background: colorBgBody,\n      '&, *': {\n        boxSizing: 'border-box'\n      },\n      [`&${componentCls}-has-sider`]: {\n        flexDirection: 'row',\n        [`> ${componentCls}, > ${componentCls}-content`]: {\n          // https://segmentfault.com/a/1190000019498300\n          width: 0\n        }\n      },\n      [`${componentCls}-header, &${componentCls}-footer`]: {\n        flex: '0 0 auto'\n      },\n      [`${componentCls}-header`]: {\n        height: layoutHeaderHeight,\n        paddingInline: layoutHeaderPaddingInline,\n        color: layoutHeaderColor,\n        lineHeight: `${layoutHeaderHeight}px`,\n        background: colorBgHeader,\n        // Other components/menu/style/index.less line:686\n        // Integration with header element so menu items have the same height\n        [`${antCls}-menu`]: {\n          lineHeight: 'inherit'\n        }\n      },\n      [`${componentCls}-footer`]: {\n        padding: layoutFooterPadding,\n        color: colorText,\n        fontSize,\n        background: colorBgBody\n      },\n      [`${componentCls}-content`]: {\n        flex: 'auto',\n        // fix firefox can't set height smaller than content on flex item\n        minHeight: 0\n      },\n      [`${componentCls}-sider`]: {\n        position: 'relative',\n        // fix firefox can't set width smaller than content on flex item\n        minWidth: 0,\n        background: colorBgHeader,\n        transition: `all ${motionDurationMid}`,\n        '&-children': {\n          height: '100%',\n          // Hack for fixing margin collapse bug\n          // https://github.com/ant-design/ant-design/issues/7967\n          // solution from https://stackoverflow.com/a/33132624/3040605\n          marginTop: -0.1,\n          paddingTop: 0.1,\n          [`${antCls}-menu${antCls}-menu-inline-collapsed`]: {\n            width: 'auto'\n          }\n        },\n        '&-has-trigger': {\n          paddingBottom: layoutTriggerHeight\n        },\n        '&-right': {\n          order: 1\n        },\n        '&-trigger': {\n          position: 'fixed',\n          bottom: 0,\n          zIndex: 1,\n          height: layoutTriggerHeight,\n          color: colorTextLightSolid,\n          lineHeight: `${layoutTriggerHeight}px`,\n          textAlign: 'center',\n          background: colorBgTrigger,\n          cursor: 'pointer',\n          transition: `all ${motionDurationMid}`\n        },\n        '&-zero-width': {\n          '> *': {\n            overflow: 'hidden'\n          },\n          '&-trigger': {\n            position: 'absolute',\n            top: layoutHeaderHeight,\n            insetInlineEnd: -layoutZeroTriggerSize,\n            zIndex: 1,\n            width: layoutZeroTriggerSize,\n            height: layoutZeroTriggerSize,\n            color: colorTextLightSolid,\n            fontSize: token.fontSizeXL,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: colorBgHeader,\n            borderStartStartRadius: 0,\n            borderStartEndRadius: borderRadius,\n            borderEndEndRadius: borderRadius,\n            borderEndStartRadius: 0,\n            cursor: 'pointer',\n            transition: `background ${motionDurationSlow} ease`,\n            '&::after': {\n              position: 'absolute',\n              inset: 0,\n              background: 'transparent',\n              transition: `all ${motionDurationSlow}`,\n              content: '\"\"'\n            },\n            '&:hover::after': {\n              // FIXME: Hardcode, but seems no need to create a token for this\n              background: `rgba(255, 255, 255, 0.2)`\n            },\n            '&-right': {\n              insetInlineStart: -layoutZeroTriggerSize,\n              borderStartStartRadius: borderRadius,\n              borderStartEndRadius: 0,\n              borderEndEndRadius: 0,\n              borderEndStartRadius: borderRadius\n            }\n          }\n        }\n      }\n    }, genLayoutLightStyle(token)), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Layout', token => {\n  const {\n    colorText,\n    controlHeightSM,\n    controlHeight,\n    controlHeightLG,\n    marginXXS\n  } = token;\n  const layoutHeaderPaddingInline = controlHeightLG * 1.25;\n  const layoutToken = mergeToken(token, {\n    // Layout\n    layoutHeaderHeight: controlHeight * 2,\n    layoutHeaderPaddingInline,\n    layoutHeaderColor: colorText,\n    layoutFooterPadding: `${controlHeightSM}px ${layoutHeaderPaddingInline}px`,\n    layoutTriggerHeight: controlHeightLG + marginXXS * 2,\n    layoutZeroTriggerSize: controlHeightLG\n  });\n  return [genLayoutStyle(layoutToken)];\n}, token => {\n  const {\n    colorBgLayout\n  } = token;\n  return {\n    colorBgHeader: '#001529',\n    colorBgBody: colorBgLayout,\n    colorBgTrigger: '#002140'\n  };\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}