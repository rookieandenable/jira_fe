{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antSpinMove = new Keyframes('antSpinMove', {\n  to: {\n    opacity: 1\n  }\n});\nconst antRotate = new Keyframes('antRotate', {\n  to: {\n    transform: 'rotate(405deg)'\n  }\n});\nconst genSpinStyle = token => ({\n  [`${token.componentCls}`]: Object.assign(Object.assign({}, resetComponent(token)), {\n    position: 'absolute',\n    display: 'none',\n    color: token.colorPrimary,\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    opacity: 0,\n    transition: `transform ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`,\n    '&-spinning': {\n      position: 'static',\n      display: 'inline-block',\n      opacity: 1\n    },\n    '&-nested-loading': {\n      position: 'relative',\n      [`> div > ${token.componentCls}`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineStart: 0,\n        zIndex: 4,\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        maxHeight: token.contentHeight,\n        [`${token.componentCls}-dot`]: {\n          position: 'absolute',\n          top: '50%',\n          insetInlineStart: '50%',\n          margin: -token.spinDotSize / 2\n        },\n        [`${token.componentCls}-text`]: {\n          position: 'absolute',\n          top: '50%',\n          width: '100%',\n          paddingTop: (token.spinDotSize - token.fontSize) / 2 + 2,\n          textShadow: `0 1px 2px ${token.colorBgContainer}` // FIXME: shadow\n        },\n\n        [`&${token.componentCls}-show-text ${token.componentCls}-dot`]: {\n          marginTop: -(token.spinDotSize / 2) - 10\n        },\n        '&-sm': {\n          [`${token.componentCls}-dot`]: {\n            margin: -token.spinDotSizeSM / 2\n          },\n          [`${token.componentCls}-text`]: {\n            paddingTop: (token.spinDotSizeSM - token.fontSize) / 2 + 2\n          },\n          [`&${token.componentCls}-show-text ${token.componentCls}-dot`]: {\n            marginTop: -(token.spinDotSizeSM / 2) - 10\n          }\n        },\n        '&-lg': {\n          [`${token.componentCls}-dot`]: {\n            margin: -(token.spinDotSizeLG / 2)\n          },\n          [`${token.componentCls}-text`]: {\n            paddingTop: (token.spinDotSizeLG - token.fontSize) / 2 + 2\n          },\n          [`&${token.componentCls}-show-text ${token.componentCls}-dot`]: {\n            marginTop: -(token.spinDotSizeLG / 2) - 10\n          }\n        }\n      },\n      [`${token.componentCls}-container`]: {\n        position: 'relative',\n        transition: `opacity ${token.motionDurationSlow}`,\n        '&::after': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: 0,\n          insetInlineStart: 0,\n          zIndex: 10,\n          width: '100%',\n          height: '100%',\n          background: token.colorBgContainer,\n          opacity: 0,\n          transition: `all ${token.motionDurationSlow}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        }\n      },\n      [`${token.componentCls}-blur`]: {\n        clear: 'both',\n        opacity: 0.5,\n        userSelect: 'none',\n        pointerEvents: 'none',\n        [`&::after`]: {\n          opacity: 0.4,\n          pointerEvents: 'auto'\n        }\n      }\n    },\n    // tip\n    // ------------------------------\n    [`&-tip`]: {\n      color: token.spinDotDefault\n    },\n    // dots\n    // ------------------------------\n    [`${token.componentCls}-dot`]: {\n      position: 'relative',\n      display: 'inline-block',\n      fontSize: token.spinDotSize,\n      width: '1em',\n      height: '1em',\n      '&-item': {\n        position: 'absolute',\n        display: 'block',\n        width: (token.spinDotSize - token.marginXXS / 2) / 2,\n        height: (token.spinDotSize - token.marginXXS / 2) / 2,\n        backgroundColor: token.colorPrimary,\n        borderRadius: '100%',\n        transform: 'scale(0.75)',\n        transformOrigin: '50% 50%',\n        opacity: 0.3,\n        animationName: antSpinMove,\n        animationDuration: '1s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n        animationDirection: 'alternate',\n        '&:nth-child(1)': {\n          top: 0,\n          insetInlineStart: 0\n        },\n        '&:nth-child(2)': {\n          top: 0,\n          insetInlineEnd: 0,\n          animationDelay: '0.4s'\n        },\n        '&:nth-child(3)': {\n          insetInlineEnd: 0,\n          bottom: 0,\n          animationDelay: '0.8s'\n        },\n        '&:nth-child(4)': {\n          bottom: 0,\n          insetInlineStart: 0,\n          animationDelay: '1.2s'\n        }\n      },\n      '&-spin': {\n        transform: 'rotate(45deg)',\n        animationName: antRotate,\n        animationDuration: '1.2s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear'\n      }\n    },\n    // Sizes\n    // ------------------------------\n    // small\n    [`&-sm ${token.componentCls}-dot`]: {\n      fontSize: token.spinDotSizeSM,\n      i: {\n        width: (token.spinDotSizeSM - token.marginXXS / 2) / 2,\n        height: (token.spinDotSizeSM - token.marginXXS / 2) / 2\n      }\n    },\n    // large\n    [`&-lg ${token.componentCls}-dot`]: {\n      fontSize: token.spinDotSizeLG,\n      i: {\n        width: (token.spinDotSizeLG - token.marginXXS) / 2,\n        height: (token.spinDotSizeLG - token.marginXXS) / 2\n      }\n    },\n    [`&${token.componentCls}-show-text ${token.componentCls}-text`]: {\n      display: 'block'\n    }\n  })\n});\n// ============================== Export ==============================\nexport default genComponentStyleHook('Spin', token => {\n  const spinToken = mergeToken(token, {\n    spinDotDefault: token.colorTextDescription,\n    spinDotSize: token.controlHeightLG / 2,\n    spinDotSizeSM: token.controlHeightLG * 0.35,\n    spinDotSizeLG: token.controlHeight\n  });\n  return [genSpinStyle(spinToken)];\n}, {\n  contentHeight: 400\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}