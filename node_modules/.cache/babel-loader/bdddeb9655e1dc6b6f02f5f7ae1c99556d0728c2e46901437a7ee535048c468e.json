{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent, textEllipsis } from '../../style';\n// ============================== Shared ==============================\nconst genSharedAnchorStyle = token => {\n  const {\n    componentCls,\n    holderOffsetBlock,\n    motionDurationSlow,\n    lineWidthBold,\n    colorPrimary\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: {\n      marginBlockStart: -holderOffsetBlock,\n      paddingBlockStart: holderOffsetBlock,\n      // delete overflow: auto\n      // overflow: 'auto',\n      backgroundColor: 'transparent',\n      [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n        position: 'relative',\n        paddingInlineStart: lineWidthBold,\n        [`${componentCls}-ink`]: {\n          position: 'absolute',\n          insetBlockStart: 0,\n          insetInlineStart: 0,\n          height: '100%',\n          '&::before': {\n            position: 'relative',\n            display: 'block',\n            width: lineWidthBold,\n            height: '100%',\n            margin: '0 auto',\n            backgroundColor: token.colorSplit,\n            content: '\" \"'\n          }\n        },\n        [`${componentCls}-ink-ball`]: {\n          position: 'absolute',\n          left: {\n            _skip_check_: true,\n            value: 0\n          },\n          display: 'none',\n          transform: 'translateY(-50%)',\n          transition: `top ${motionDurationSlow} ease-in-out`,\n          width: lineWidthBold,\n          backgroundColor: colorPrimary,\n          [`&${componentCls}-ink-ball-visible`]: {\n            display: 'inline-block'\n          }\n        },\n        [`${componentCls}-link`]: {\n          paddingBlock: token.anchorPaddingBlock,\n          paddingInline: `${token.anchorPaddingInline}px 0`,\n          '&-title': Object.assign(Object.assign({}, textEllipsis), {\n            position: 'relative',\n            display: 'block',\n            marginBlockEnd: token.anchorTitleBlock,\n            color: token.colorText,\n            transition: `all ${token.motionDurationSlow}`,\n            '&:only-child': {\n              marginBlockEnd: 0\n            }\n          }),\n          [`&-active > ${componentCls}-link-title`]: {\n            color: token.colorPrimary\n          },\n          // link link\n          [`${componentCls}-link`]: {\n            paddingBlock: token.anchorPaddingBlockSecondary\n          }\n        }\n      }),\n      [`${componentCls}-fixed ${componentCls}-ink ${componentCls}-ink-ball`]: {\n        display: 'none'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Anchor', token => {\n  const {\n    fontSize,\n    fontSizeLG,\n    padding,\n    paddingXXS\n  } = token;\n  const anchorToken = mergeToken(token, {\n    holderOffsetBlock: paddingXXS,\n    anchorPaddingBlock: paddingXXS,\n    anchorPaddingBlockSecondary: paddingXXS / 2,\n    anchorPaddingInline: padding,\n    anchorTitleBlock: fontSize / 14 * 3,\n    anchorBallSize: fontSizeLG / 2\n  });\n  return [genSharedAnchorStyle(anchorToken)];\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}