{"ast":null,"code":"import { mergeToken } from '../../theme/internal';\nimport { resetIcon } from '../../style';\nconst FIXED_ITEM_MARGIN = 2;\nfunction getSelectItemStyle(_ref) {\n  let {\n    controlHeightSM,\n    controlHeight,\n    lineWidth: borderWidth\n  } = _ref;\n  const selectItemDist = (controlHeight - controlHeightSM) / 2 - borderWidth;\n  const selectItemMargin = Math.ceil(selectItemDist / 2);\n  return [selectItemDist, selectItemMargin];\n}\nfunction genSizeStyle(token, suffix) {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  const selectOverflowPrefixCls = `${componentCls}-selection-overflow`;\n  const selectItemHeight = token.controlHeightSM;\n  const [selectItemDist] = getSelectItemStyle(token);\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  return {\n    [`${componentCls}-multiple${suffixCls}`]: {\n      fontSize: token.fontSize,\n      /**\n       * Do not merge `height` & `line-height` under style with `selection` & `search`, since chrome\n       * may update to redesign with its align logic.\n       */\n      // =========================== Overflow ===========================\n      [selectOverflowPrefixCls]: {\n        position: 'relative',\n        display: 'flex',\n        flex: 'auto',\n        flexWrap: 'wrap',\n        maxWidth: '100%',\n        '&-item': {\n          flex: 'none',\n          alignSelf: 'center',\n          maxWidth: '100%',\n          display: 'inline-flex'\n        }\n      },\n      // ========================= Selector =========================\n      [`${componentCls}-selector`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        // Multiple is little different that horizontal is follow the vertical\n        padding: `${selectItemDist - FIXED_ITEM_MARGIN}px ${FIXED_ITEM_MARGIN * 2}px`,\n        borderRadius: token.borderRadius,\n        [`${componentCls}-show-search&`]: {\n          cursor: 'text'\n        },\n        [`${componentCls}-disabled&`]: {\n          background: token.colorBgContainerDisabled,\n          cursor: 'not-allowed'\n        },\n        '&:after': {\n          display: 'inline-block',\n          width: 0,\n          margin: `${FIXED_ITEM_MARGIN}px 0`,\n          lineHeight: `${selectItemHeight}px`,\n          content: '\"\\\\a0\"'\n        }\n      },\n      [`\n        &${componentCls}-show-arrow ${componentCls}-selector,\n        &${componentCls}-allow-clear ${componentCls}-selector\n      `]: {\n        paddingInlineEnd: token.fontSizeIcon + token.controlPaddingHorizontal\n      },\n      // ======================== Selections ========================\n      [`${componentCls}-selection-item`]: {\n        position: 'relative',\n        display: 'flex',\n        flex: 'none',\n        boxSizing: 'border-box',\n        maxWidth: '100%',\n        height: selectItemHeight,\n        marginTop: FIXED_ITEM_MARGIN,\n        marginBottom: FIXED_ITEM_MARGIN,\n        lineHeight: `${selectItemHeight - token.lineWidth * 2}px`,\n        background: token.colorFillSecondary,\n        border: `${token.lineWidth}px solid ${token.colorSplit}`,\n        borderRadius: token.borderRadiusSM,\n        cursor: 'default',\n        transition: `font-size ${token.motionDurationSlow}, line-height ${token.motionDurationSlow}, height ${token.motionDurationSlow}`,\n        userSelect: 'none',\n        marginInlineEnd: FIXED_ITEM_MARGIN * 2,\n        paddingInlineStart: token.paddingXS,\n        paddingInlineEnd: token.paddingXS / 2,\n        [`${componentCls}-disabled&`]: {\n          color: token.colorTextDisabled,\n          borderColor: token.colorBorder,\n          cursor: 'not-allowed'\n        },\n        // It's ok not to do this, but 24px makes bottom narrow in view should adjust\n        '&-content': {\n          display: 'inline-block',\n          marginInlineEnd: token.paddingXS / 2,\n          overflow: 'hidden',\n          whiteSpace: 'pre',\n          textOverflow: 'ellipsis'\n        },\n        '&-remove': Object.assign(Object.assign({}, resetIcon()), {\n          display: 'inline-block',\n          color: token.colorIcon,\n          fontWeight: 'bold',\n          fontSize: 10,\n          lineHeight: 'inherit',\n          cursor: 'pointer',\n          [`> ${iconCls}`]: {\n            verticalAlign: '-0.2em'\n          },\n          '&:hover': {\n            color: token.colorIconHover\n          }\n        })\n      },\n      // ========================== Input ==========================\n      [`${selectOverflowPrefixCls}-item + ${selectOverflowPrefixCls}-item`]: {\n        [`${componentCls}-selection-search`]: {\n          marginInlineStart: 0\n        }\n      },\n      [`${componentCls}-selection-search`]: {\n        display: 'inline-flex',\n        position: 'relative',\n        maxWidth: '100%',\n        marginInlineStart: token.inputPaddingHorizontalBase - selectItemDist,\n        [`\n          &-input,\n          &-mirror\n        `]: {\n          height: selectItemHeight,\n          fontFamily: token.fontFamily,\n          lineHeight: `${selectItemHeight}px`,\n          transition: `all ${token.motionDurationSlow}`\n        },\n        '&-input': {\n          width: '100%',\n          minWidth: 4.1 // fix search cursor missing\n        },\n\n        '&-mirror': {\n          position: 'absolute',\n          top: 0,\n          insetInlineStart: 0,\n          insetInlineEnd: 'auto',\n          zIndex: 999,\n          whiteSpace: 'pre',\n          visibility: 'hidden'\n        }\n      },\n      // ======================= Placeholder =======================\n      [`${componentCls}-selection-placeholder `]: {\n        position: 'absolute',\n        top: '50%',\n        insetInlineStart: token.inputPaddingHorizontalBase,\n        insetInlineEnd: token.inputPaddingHorizontalBase,\n        transform: 'translateY(-50%)',\n        transition: `all ${token.motionDurationSlow}`\n      }\n    }\n  };\n}\nexport default function genMultipleStyle(token) {\n  const {\n    componentCls\n  } = token;\n  const smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    controlHeightSM: token.controlHeightXS,\n    borderRadius: token.borderRadiusSM,\n    borderRadiusSM: token.borderRadiusXS\n  });\n  const [, smSelectItemMargin] = getSelectItemStyle(token);\n  return [genSizeStyle(token),\n  // ======================== Small ========================\n  // Shared\n  genSizeStyle(smallToken, 'sm'),\n  // Padding\n  {\n    [`${componentCls}-multiple${componentCls}-sm`]: {\n      [`${componentCls}-selection-placeholder`]: {\n        insetInlineStart: token.controlPaddingHorizontalSM - token.lineWidth,\n        insetInlineEnd: 'auto'\n      },\n      // https://github.com/ant-design/ant-design/issues/29559\n      [`${componentCls}-selection-search`]: {\n        marginInlineStart: smSelectItemMargin\n      }\n    }\n  },\n  // ======================== Large ========================\n  // Shared\n  genSizeStyle(mergeToken(token, {\n    fontSize: token.fontSizeLG,\n    controlHeight: token.controlHeightLG,\n    controlHeightSM: token.controlHeight,\n    borderRadius: token.borderRadiusLG,\n    borderRadiusSM: token.borderRadius\n  }), 'lg')];\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}