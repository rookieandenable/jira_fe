{"ast":null,"code":"import e from \"compute-scroll-into-view\";\nlet t = e => !1 === e ? {\n  block: \"end\",\n  inline: \"nearest\"\n} : (e => e === Object(e) && 0 !== Object.keys(e).length)(e) ? e : {\n  block: \"start\",\n  inline: \"nearest\"\n};\nfunction o(o, l) {\n  let n = o.isConnected || o.ownerDocument.documentElement.contains(o);\n  if ((e => \"object\" == typeof e && \"function\" == typeof e.behavior)(l)) return l.behavior(n ? e(o, l) : []);\n  if (!n) return;\n  let r = t(l),\n    c = e(o, r),\n    i = (\"scrollBehavior\" in document.body.style);\n  c.forEach(e => {\n    let {\n      el: t,\n      top: o,\n      left: l\n    } = e;\n    t.scroll && i ? t.scroll({\n      top: o,\n      left: l,\n      behavior: r.behavior\n    }) : (t.scrollTop = o, t.scrollLeft = l);\n  });\n}\nexport { o as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}