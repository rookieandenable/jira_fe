{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Skeleton from '../skeleton';\nimport StatisticNumber from './Number';\nimport useStyle from './style';\nimport Countdown from './Countdown';\nconst Statistic = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    style,\n    valueStyle,\n    value = 0,\n    title,\n    valueRender,\n    prefix,\n    suffix,\n    loading = false,\n    onMouseEnter,\n    onMouseLeave,\n    decimalSeparator = '.',\n    groupSeparator = ','\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('statistic', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const valueNode = /*#__PURE__*/React.createElement(StatisticNumber, Object.assign({\n    decimalSeparator: decimalSeparator,\n    groupSeparator: groupSeparator,\n    prefixCls: prefixCls\n  }, props, {\n    value: value\n  }));\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, title && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-title`\n  }, title), /*#__PURE__*/React.createElement(Skeleton, {\n    paragraph: false,\n    loading: loading,\n    className: `${prefixCls}-skeleton`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: valueStyle,\n    className: `${prefixCls}-content`\n  }, prefix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-prefix`\n  }, prefix), valueRender ? valueRender(valueNode) : valueNode, suffix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-suffix`\n  }, suffix)))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Statistic.displayName = 'Statistic';\n}\nStatistic.Countdown = Countdown;\nexport default Statistic;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}