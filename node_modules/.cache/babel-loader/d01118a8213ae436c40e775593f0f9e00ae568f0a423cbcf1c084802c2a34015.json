{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport DoubleLeftOutlined from \"@ant-design/icons/es/icons/DoubleLeftOutlined\";\nimport DoubleRightOutlined from \"@ant-design/icons/es/icons/DoubleRightOutlined\";\nimport LeftOutlined from \"@ant-design/icons/es/icons/LeftOutlined\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcPagination from 'rc-pagination';\nimport enUS from \"rc-pagination/es/locale/en_US\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport { MiddleSelect, MiniSelect } from './Select';\nimport useStyle from './style';\nconst Pagination = _a => {\n  var {\n      prefixCls: customizePrefixCls,\n      selectPrefixCls: customizeSelectPrefixCls,\n      className,\n      size,\n      locale: customLocale,\n      selectComponentClass,\n      responsive,\n      showSizeChanger\n    } = _a,\n    restProps = __rest(_a, [\"prefixCls\", \"selectPrefixCls\", \"className\", \"size\", \"locale\", \"selectComponentClass\", \"responsive\", \"showSizeChanger\"]);\n  const {\n    xs\n  } = useBreakpoint(responsive);\n  const {\n    getPrefixCls,\n    direction,\n    pagination = {}\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('pagination', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergedShowSizeChanger = showSizeChanger !== null && showSizeChanger !== void 0 ? showSizeChanger : pagination.showSizeChanger;\n  const getIconsProps = () => {\n    const ellipsis = /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-item-ellipsis`\n    }, \"\\u2022\\u2022\\u2022\");\n    let prevIcon = /*#__PURE__*/React.createElement(\"button\", {\n      className: `${prefixCls}-item-link`,\n      type: \"button\",\n      tabIndex: -1\n    }, /*#__PURE__*/React.createElement(LeftOutlined, null));\n    let nextIcon = /*#__PURE__*/React.createElement(\"button\", {\n      className: `${prefixCls}-item-link`,\n      type: \"button\",\n      tabIndex: -1\n    }, /*#__PURE__*/React.createElement(RightOutlined, null));\n    let jumpPrevIcon = /*#__PURE__*/React.createElement(\"a\", {\n      className: `${prefixCls}-item-link`\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-item-container`\n    }, /*#__PURE__*/React.createElement(DoubleLeftOutlined, {\n      className: `${prefixCls}-item-link-icon`\n    }), ellipsis));\n    let jumpNextIcon = /*#__PURE__*/React.createElement(\"a\", {\n      className: `${prefixCls}-item-link`\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-item-container`\n    }, /*#__PURE__*/React.createElement(DoubleRightOutlined, {\n      className: `${prefixCls}-item-link-icon`\n    }), ellipsis));\n    // change arrows direction in right-to-left direction\n    if (direction === 'rtl') {\n      [prevIcon, nextIcon] = [nextIcon, prevIcon];\n      [jumpPrevIcon, jumpNextIcon] = [jumpNextIcon, jumpPrevIcon];\n    }\n    return {\n      prevIcon,\n      nextIcon,\n      jumpPrevIcon,\n      jumpNextIcon\n    };\n  };\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Pagination\",\n    defaultLocale: enUS\n  }, contextLocale => {\n    const locale = Object.assign(Object.assign({}, contextLocale), customLocale);\n    const isSmall = size === 'small' || !!(xs && !size && responsive);\n    const selectPrefixCls = getPrefixCls('select', customizeSelectPrefixCls);\n    const extendedClassName = classNames({\n      [`${prefixCls}-mini`]: isSmall,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(RcPagination, Object.assign({}, getIconsProps(), restProps, {\n      prefixCls: prefixCls,\n      selectPrefixCls: selectPrefixCls,\n      className: extendedClassName,\n      selectComponentClass: selectComponentClass || (isSmall ? MiniSelect : MiddleSelect),\n      locale: locale,\n      showSizeChanger: mergedShowSizeChanger\n    })));\n  });\n};\nif (process.env.NODE_ENV !== 'production') {\n  Pagination.displayName = 'Pagination';\n}\nexport default Pagination;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}