{"ast":null,"code":"import { initMoveMotion, initSlideMotion, slideDownIn, slideDownOut, slideUpIn, slideUpOut } from '../../style/motion';\nimport { resetComponent, textEllipsis } from '../../style';\nconst genItemStyle = token => {\n  const {\n    controlPaddingHorizontal\n  } = token;\n  return {\n    position: 'relative',\n    display: 'block',\n    minHeight: token.controlHeight,\n    padding: `${(token.controlHeight - token.fontSize * token.lineHeight) / 2}px ${controlPaddingHorizontal}px`,\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight,\n    boxSizing: 'border-box'\n  };\n};\nconst genSingleStyle = token => {\n  const {\n    antCls,\n    componentCls\n  } = token;\n  const selectItemCls = `${componentCls}-item`;\n  return [{\n    [`${componentCls}-dropdown`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: -9999,\n      zIndex: token.zIndexPopup,\n      boxSizing: 'border-box',\n      padding: token.paddingXXS,\n      overflow: 'hidden',\n      fontSize: token.fontSize,\n      // Fix select render lag of long text in chrome\n      // https://github.com/ant-design/ant-design/issues/11456\n      // https://github.com/ant-design/ant-design/issues/11843\n      fontVariant: 'initial',\n      backgroundColor: token.colorBgElevated,\n      borderRadius: token.borderRadiusLG,\n      outline: 'none',\n      boxShadow: token.boxShadowSecondary,\n      [`\n            &${antCls}-slide-up-enter${antCls}-slide-up-enter-active${componentCls}-dropdown-placement-bottomLeft,\n            &${antCls}-slide-up-appear${antCls}-slide-up-appear-active${componentCls}-dropdown-placement-bottomLeft\n          `]: {\n        animationName: slideUpIn\n      },\n      [`\n            &${antCls}-slide-up-enter${antCls}-slide-up-enter-active${componentCls}-dropdown-placement-topLeft,\n            &${antCls}-slide-up-appear${antCls}-slide-up-appear-active${componentCls}-dropdown-placement-topLeft\n          `]: {\n        animationName: slideDownIn\n      },\n      [`&${antCls}-slide-up-leave${antCls}-slide-up-leave-active${componentCls}-dropdown-placement-bottomLeft`]: {\n        animationName: slideUpOut\n      },\n      [`&${antCls}-slide-up-leave${antCls}-slide-up-leave-active${componentCls}-dropdown-placement-topLeft`]: {\n        animationName: slideDownOut\n      },\n      '&-hidden': {\n        display: 'none'\n      },\n      '&-empty': {\n        color: token.colorTextDisabled\n      },\n      // ========================= Options =========================\n      [`${selectItemCls}-empty`]: Object.assign(Object.assign({}, genItemStyle(token)), {\n        color: token.colorTextDisabled\n      }),\n      [`${selectItemCls}`]: Object.assign(Object.assign({}, genItemStyle(token)), {\n        cursor: 'pointer',\n        transition: `background ${token.motionDurationSlow} ease`,\n        borderRadius: token.borderRadiusSM,\n        // =========== Group ============\n        '&-group': {\n          color: token.colorTextDescription,\n          fontSize: token.fontSizeSM,\n          cursor: 'default'\n        },\n        // =========== Option ===========\n        '&-option': {\n          display: 'flex',\n          '&-content': Object.assign({\n            flex: 'auto'\n          }, textEllipsis),\n          '&-state': {\n            flex: 'none'\n          },\n          [`&-active:not(${selectItemCls}-option-disabled)`]: {\n            backgroundColor: token.controlItemBgHover\n          },\n          [`&-selected:not(${selectItemCls}-option-disabled)`]: {\n            color: token.colorText,\n            fontWeight: token.fontWeightStrong,\n            backgroundColor: token.controlItemBgActive,\n            [`${selectItemCls}-option-state`]: {\n              color: token.colorPrimary\n            }\n          },\n          '&-disabled': {\n            [`&${selectItemCls}-option-selected`]: {\n              backgroundColor: token.colorBgContainerDisabled\n            },\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed'\n          },\n          '&-grouped': {\n            paddingInlineStart: token.controlPaddingHorizontal * 2\n          }\n        }\n      }),\n      // =========================== RTL ===========================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  },\n  // Follow code may reuse in other components\n  initSlideMotion(token, 'slide-up'), initSlideMotion(token, 'slide-down'), initMoveMotion(token, 'move-up'), initMoveMotion(token, 'move-down')];\n};\nexport default genSingleStyle;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}