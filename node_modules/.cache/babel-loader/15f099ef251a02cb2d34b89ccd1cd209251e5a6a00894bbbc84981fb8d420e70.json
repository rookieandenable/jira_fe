{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useState } from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input } from 'antd';\nimport { Background, Container, Header, ShadowCard, Title } from './styled';\nvar UnAuthorizedPage = function UnAuthorizedPage() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginBtn = _useState2[0],\n    setLoginBtn = _useState2[1];\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(Background, null), /*#__PURE__*/React.createElement(ShadowCard, null, /*#__PURE__*/React.createElement(Title, null, loginBtn ? 'Login' : 'Register'), /*#__PURE__*/React.createElement(MainPage, {\n    loginBtn: loginBtn,\n    setLoginBtn: setLoginBtn\n  })));\n};\nvar MainPage = function MainPage(props) {\n  var onFinish = function onFinish(values) {\n    console.log('Received values of form: ', values);\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your Username!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    placeholder: \"Username\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"Password\"\n  })), loginBtn ? '' : /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"cpassword\",\n    rules: [{\n      required: true,\n      message: 'Please confirm your Password!'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\"\n    }),\n    type: \"password\",\n    placeholder: \"cPassword\"\n  })), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    onClick: function onClick() {\n      return setLoginBtn(!loginBtn);\n    }\n  }, loginBtn ? 'Go registry' : 'Go login')), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\"\n  }, loginBtn ? 'Log in' : 'Register')));\n};\nexport default UnAuthorizedPage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}